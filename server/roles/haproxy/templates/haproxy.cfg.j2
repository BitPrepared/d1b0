global
	log /dev/log	local0 debug
	chroot /var/lib/haproxy
	maxconn 2048
	tune.ssl.default-dh-param 2048
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3 no-tls-tickets force-tlsv12

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	option  forwardfor except 127.0.0.1
	# deny client persistent connections without keepalive
	option	http-server-close

	timeout http-request 5s
	timeout connect 5s
	timeout client  30s
	timeout server  10s

	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


listen stats
	bind {{bind_stat_ip}}:1936
	mode http
	stats enable
	stats refresh 30s
	stats hide-version
	stats scope .
	stats realm Haproxy\ Statistics
	stats uri /
	stats auth user:pass

frontend www-http
   bind {{bind_ip}}:80
   redirect scheme https code 301 if !{ ssl_fc }

frontend www-https
  bind {{bind_ip}}:443 ssl crt {{ ssl_cert }}

	# DDOS defence
	stick-table type ip size 100k expire 30s store conn_cur

	# Shut the new connection as long as the client has already 10 opened
	tcp-request connection reject if { src_conn_cur ge 10 }
	tcp-request connection track-sc1 src

	# Mandatory to build the URL:
	capture request header Host len 32

{% for d in haproxy.domains %}
{% if d.path_beg is not defined %}
	acl {{d.acl}}     hdr(host) -i {{d.domain}}
{% endif %}
{% endfor %}

{% for d in haproxy.domains %}
{% if d.path_beg is defined %}
	acl has_{{d.path_beg}}_uri path_beg /{{d.path_beg}}/
{% endif %}
{% endfor %}

	reqadd X-Forwarded-Proto:\ https

	# Remove headers that expose security-sensitive information.
	rspidel ^Server:.*$
	rspidel ^X-Powered-By:.*$
	rspidel ^X-AspNet-Version:.*$

	rspirep ^(set-cookie:.*)  \1;\ Secure
	rspadd X-XSS-Protection:\ 1;\ mode=block
	rspadd X-Content-Type-Options:\ nosniff

{% for r in haproxy.redirects %}
	redirect prefix {{r.dest}} code {{r.code}} if {{r.acl}}
{% endfor %}

{% for d in haproxy.domains %}
{% if d.path_beg is not defined %}
{% if d.backend is defined %}
	use_backend {{d.backend.name}} if {{d.acl}}
{% endif %}
{% endif %}
{% endfor %}

{% for d in haproxy.domains %}
{% if d.path_beg is defined %}
{% if d.backend is defined %}
	use_backend {{d.backend.name}} if has_{{d.path_beg}}_uri {{d.acl}}
{% endif %}
{% endif %}
{% endfor %}

	default_backend {{haproxy.default_backend}}

{% for d in haproxy.domains %}
{% if d.backend is defined %}
backend {{d.backend.name}}
{% for b in d.backend.array %}
	server www-{{loop.index}} {{b.ip}}:{{b.port}} check
{% endfor %}
{% endif %}
{% endfor %}
