// Automatically upgrade packages from these (origin:archive) pairs
Unattended-Upgrade::Allowed-Origins {
unattended_origins
{% if unattended_origins.security != true %} // {% endif %} "${distro_id}:${distro_codename}-security";
{% if unattended_origins.updates != true %} // {% endif %} "${distro_id}:${distro_codename}-updates";
{% if unattended_origins.proposed != true %} // {% endif %} "${distro_id}:${distro_codename}-proposed";
{% if unattended_origins.backports != true %} // {% endif %} "${distro_id}:${distro_codename}-backports";
};
// List of packages to not update
Unattended-Upgrade::Package-Blacklist {
//	"vim";
//	"libc6";
//	"libc6-dev";
//	"libc6-i686";
{% if unattended_blacklist is defined %}{% for package in unattended_blacklist %}
"{{package}}";
{% endfor %}{% endif %}
};
// This option allows you to control if on a unclean dpkg exit
// unattended-upgrades will automatically run
//   dpkg --force-confold --configure -a
// The default is true, to ensure updates keep getting installed
Unattended-Upgrade::AutoFixInterruptedDpkg "{{unattended_autofix}}";
// Split the upgrade into the smallest possible chunks so that
// they can be interrupted with SIGUSR1. This makes the upgrade
// a bit slower but it has the benefit that shutdown while a upgrade
// is running is possible (with a small delay)
Unattended-Upgrade::MinimalSteps "{{unattended_steps}}";
// Install all unattended-upgrades when the machine is shuting down
// instead of doing it in the background while the machine is running
// This will (obviously) make shutdown slower
Unattended-Upgrade::InstallOnShutdown "{{unattended_shutdown}}";
// Send email to this address for problems or packages upgrades
// If empty or unset then no email is sent, make sure that you
// have a working mail setup on your system. A package that provides
// 'mailx' must be installed.
{% if unattended_mail is defined %}
Unattended-Upgrade::Mail "{{unattended_mail}}";
{% endif %}
// Set this value to "true" to get emails only on errors. Default
// is to always send a mail if Unattended-Upgrade::Mail is set
Unattended-Upgrade::MailOnlyOnError "{{unattended_mail_error}}";
// Do automatic removal of new unused dependencies after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "{{unattended_remove_unused}}";
// Automatically reboot *WITHOUT CONFIRMATION* if a
// the file /var/run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot "{{unattended_automatic_reboot}}";
// Use apt bandwidth limit feature, this example limits the download
{% if unattended_download_limit != false%}
Acquire::http::Dl-Limit "{{unattended_download_limit}} ";
{% endif %}
