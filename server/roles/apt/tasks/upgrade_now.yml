---

- name: upgrade_now | Check if first boot file exists
  stat:
    path="{{ upgrade_now_first_boot_file }}"
  register: first_boot_stat

- name: upgrade_now | Do an apt upgrade dist
  apt:
    upgrade: dist
  when: not first_boot_stat.stat.exists or upgrade_now_force

- name: upgrade_now | Check if system requires reboot
  stat:
    path="{{ upgrade_now_apt_reboot_file }}"
  register: require_reboot
  when: not first_boot_stat.stat.exists or upgrade_now_force

- name: upgrade_now | Reboot now
  command: shutdown -r now
  when: require_reboot is defined and require_reboot.stat.exists

- name: upgrade_now | Check and set if ansible_ssh_host is set
  set_fact:
      apt_ssh_hostname: "{{ ansible_ssh_host }}"
  when: ansible_ssh_host is defined

- name: upgrade_now | if no ansible_ssh_host use inventory_hostname
  set_fact:
      apt_ssh_hostname: "{{ inventory_hostname }}"
  when: ansible_ssh_host is not defined

- name: upgrade_now | Wait for ssh port to open again
  wait_for:
    port="{{ upgrade_now_ssh_port }}"
    host="{{ apt_ssh_hostname }}"
    delay=30
    timeout=180
    search_regex=OpenSSH
  connection: local
  sudo: False
  when: require_reboot is defined and require_reboot.stat.exists

- name: upgrade_now | pause a little to ensure everything is running
  pause:
    seconds="{{ upgrade_now_pause_after_reboot }}"
  when: upgrade_now_reboot_file is defined and upgrade_now_reboot_file.exists

- name: upgrade_now | Touch file guard
  copy:
    content=""
    dest="{{ upgrade_now_first_boot_file }}"
